enum OrderStatus {
    PENDING
    SUCCEEDED
    CANCELLED
}

enum UserRole {
    ADMIN
    USER
}

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model VerificationCode {
    id Int @id @default(autoincrement())

    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique

    code String @unique

    expiresAt DateTime @default(now())
    createAt  DateTime @default(now())

    @@unique([userId, code])
}

model User {
    id Int @id @default(autoincrement())

    fullName String
    email    String   @unique
    password String
    role     UserRole @default(USER)
    verified DateTime

    provider   String?
    providerId String?

    cart             Cart?
    order            Order[]
    verificationCode VerificationCode?

    createAt  DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model CartItem {
    id Int @id @default(autoincrement())

    quantity Int

    variationProduct   VariationProduct @relation(fields: [variationProductId], references: [id])
    variationProductId Int

    cart   Cart @relation(fields: [cartId], references: [id])
    cartId Int

    ingredients Ingredients[]
}

model Cart {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int?  @unique

    token String

    totalAmount Int @default(0)

    cartItem CartItem[]

    createAt  DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Order {
    id Int @id @default(autoincrement())

    user   User? @relation(fields: [userId], references: [id])
    userId Int

    token String

    totalAmount Int
    status      OrderStatus
    paymentId   String?

    products Json

    fullName String
    email    String
    address  String
    phone    String
    comment  String?

    createAt  DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model Category {
    id       Int       @id @default(autoincrement())
    name     String    @unique
    title    String
    products Product[]
}

model Product {
    id Int @id @default(autoincrement())

    name     String
    imageUrl String

    ingredients Ingredients[]
    variants    VariationProduct[]

    Category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int

    createAt  DateTime @default(now())
    updatedAt DateTime @updatedAt
}

model VariationProduct {
    id Int @id @default(autoincrement())

    price       Int
    size        Int?
    productType Int?
    Product     Product?   @relation(fields: [productId], references: [id])
    productId   Int?
    CartItem    CartItem[]
}

model Ingredients {
    id Int @id @default(autoincrement())

    name     String
    price    Int
    imageUrl String

    products Product[]
    cartItem CartItem[]

    createAt  DateTime @default(now())
    updatedAt DateTime @updatedAt
}
